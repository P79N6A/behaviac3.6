// ---------------------------------------------------------------------
// THIS FILE IS AUTO-GENERATED BY BEHAVIAC DESIGNER, SO PLEASE DON'T MODIFY IT BY YOURSELF!
// ---------------------------------------------------------------------

#ifndef _BEHAVIAC_MEMBER_VISITOR_H_
#define _BEHAVIAC_MEMBER_VISITOR_H_

#include "behaviac_agent_headers.h"

// Agent property and method handlers


namespace framework
{
	struct PROPERTY_TYPE_framework_GameObject_age { };
	template<> inline long& GameObject::_Get_Property_<PROPERTY_TYPE_framework_GameObject_age>()
	{
		return this->age;
	}

	struct PROPERTY_TYPE_framework_GameObject_HP { };
	template<> inline unsigned int& GameObject::_Get_Property_<PROPERTY_TYPE_framework_GameObject_HP>()
	{
		return this->HP;
	}

	struct METHOD_TYPE_framework_GameObject_alignedWithPlayer { };
	template<> inline bool GameObject::_Execute_Method_<METHOD_TYPE_framework_GameObject_alignedWithPlayer>()
	{
		return this->framework::GameObject::alignedWithPlayer();
	}

	struct METHOD_TYPE_framework_GameObject_distanceToPlayer { };
	template<> inline float GameObject::_Execute_Method_<METHOD_TYPE_framework_GameObject_distanceToPlayer>()
	{
		return this->framework::GameObject::distanceToPlayer();
	}

	struct METHOD_TYPE_framework_GameObject_GoStraight { };
	template<> inline void GameObject::_Execute_Method_<METHOD_TYPE_framework_GameObject_GoStraight>(int p0)
	{
		this->framework::GameObject::GoStraight(p0);
	}

	struct METHOD_TYPE_framework_GameObject_playerIsAligned { };
	template<> inline bool GameObject::_Execute_Method_<METHOD_TYPE_framework_GameObject_playerIsAligned>()
	{
		return this->framework::GameObject::playerIsAligned();
	}

	struct METHOD_TYPE_framework_GameObject_projectileNearby { };
	template<> inline bool GameObject::_Execute_Method_<METHOD_TYPE_framework_GameObject_projectileNearby>(float p0)
	{
		return this->framework::GameObject::projectileNearby(p0);
	}

	struct METHOD_TYPE_framework_GameObject_TurnTowardsTarget { };
	template<> inline int GameObject::_Execute_Method_<METHOD_TYPE_framework_GameObject_TurnTowardsTarget>(float p0)
	{
		return this->framework::GameObject::TurnTowardsTarget(p0);
	}

}


namespace framework
{
	struct METHOD_TYPE_framework_Ship_checkresult { };
	template<> inline behaviac::EBTStatus Ship::_Execute_Method_<METHOD_TYPE_framework_Ship_checkresult>(bool p0)
	{
		return this->framework::Ship::checkresult(p0);
	}

	struct METHOD_TYPE_framework_Ship_DestroyAllNearbyProjectiles { };
	template<> inline void Ship::_Execute_Method_<METHOD_TYPE_framework_Ship_DestroyAllNearbyProjectiles>(float p0)
	{
		this->framework::Ship::DestroyAllNearbyProjectiles(p0);
	}

	struct METHOD_TYPE_framework_Ship_Fire { };
	template<> inline bool Ship::_Execute_Method_<METHOD_TYPE_framework_Ship_Fire>()
	{
		return this->framework::Ship::Fire();
	}

	struct METHOD_TYPE_framework_Ship_GetConstDoubleValue { };
	template<> inline double Ship::_Execute_Method_<METHOD_TYPE_framework_Ship_GetConstDoubleValue>()
	{
		return this->framework::Ship::GetConstDoubleValue();
	}

	struct METHOD_TYPE_framework_Ship_GetConstFloatValue { };
	template<> inline float Ship::_Execute_Method_<METHOD_TYPE_framework_Ship_GetConstFloatValue>()
	{
		return this->framework::Ship::GetConstFloatValue();
	}

	struct METHOD_TYPE_framework_Ship_getXPosition { };
	template<> inline float Ship::_Execute_Method_<METHOD_TYPE_framework_Ship_getXPosition>()
	{
		return this->framework::Ship::getXPosition();
	}

	struct METHOD_TYPE_framework_Ship_getYPosition { };
	template<> inline float Ship::_Execute_Method_<METHOD_TYPE_framework_Ship_getYPosition>()
	{
		return this->framework::Ship::getYPosition();
	}

	struct METHOD_TYPE_framework_Ship_GotoPoint { };
	template<> inline bool Ship::_Execute_Method_<METHOD_TYPE_framework_Ship_GotoPoint>(float p0, float p1, float p2)
	{
		return this->framework::Ship::GotoPoint(p0, p1, p2);
	}

	struct METHOD_TYPE_framework_Ship_GotoPointRelative { };
	template<> inline bool Ship::_Execute_Method_<METHOD_TYPE_framework_Ship_GotoPointRelative>(float p0, float p1, float p2)
	{
		return this->framework::Ship::GotoPointRelative(p0, p1, p2);
	}

}

namespace framework
{
	struct PROPERTY_TYPE_framework_WorldState_HealthHP { };
	template<> inline unsigned int& WorldState::_Get_Property_<PROPERTY_TYPE_framework_WorldState_HealthHP>()
	{
		return this->HealthHP;
	}

	struct PROPERTY_TYPE_framework_WorldState_SyncSignal { };
	template<> inline bool& WorldState::_Get_Property_<PROPERTY_TYPE_framework_WorldState_SyncSignal>()
	{
		return this->SyncSignal;
	}

	struct PROPERTY_TYPE_framework_WorldState_time { };
	template<> inline unsigned int& WorldState::_Get_Property_<PROPERTY_TYPE_framework_WorldState_time>()
	{
		return this->time;
	}

	struct METHOD_TYPE_framework_WorldState_NextWave { };
	template<> inline bool WorldState::_Execute_Method_<METHOD_TYPE_framework_WorldState_NextWave>()
	{
		return this->framework::WorldState::NextWave();
	}

	struct METHOD_TYPE_framework_WorldState_PlayerHP { };
	template<> inline int WorldState::_Execute_Method_<METHOD_TYPE_framework_WorldState_PlayerHP>()
	{
		return this->framework::WorldState::PlayerHP();
	}

	struct METHOD_TYPE_framework_WorldState_SpawnShip { };
	template<> inline void WorldState::_Execute_Method_<METHOD_TYPE_framework_WorldState_SpawnShip>(int p0)
	{
		this->framework::WorldState::SpawnShip(p0);
	}

}

#endif // _BEHAVIAC_MEMBER_VISITOR_H_
